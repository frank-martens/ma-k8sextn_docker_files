apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: <appname>-clusteragent
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: <appname>-clusteragent
    spec:
      containers:
      - name: <appname>-clusteragent
        env:
        - name: APPLICATION_NAME
          value: "<AppDynamics --> Applications --> [Application Name Running on K8S]>"
        - name: TIER_NAME
          value: "K8SClusterAgent"
        - name: CONTROLLER_PORT
          value: "<port num: use 443 for saas ssl>"
        - name: CONTROLLER_SSL_ENABLED
          value: "<true/false>"
        - name: CONTROLLER_HOST
          value: "<[account].saas.appdynamics.com>"
        - name: ACCOUNT_ACCESS_KEY
          value: "<AppDynamics --> Settings --> License --> Accounts --> Access Key>"
        - name: ACCOUNT_NAME
          value: "<AppDynamics --> Settings --> License --> Accounts --> Name>"
        - name: GLOBAL_ACCOUNT_NAME
          value: "<AppDynamics --> Settings --> License --> Accounts --> Global Account Name>"
        - name: APPD_ANALYTICS_MONITOR
          value: "false"
        - name: APPDYNAMICS_DOCKER_ENABLED
          value: "true"
        - name: APPDYNAMICS_SIM_ENABLED
          value: "true"
        - name: MACHINE_AGENT_PROPERTIES
          value: 
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: <docker image location>
        imagePullPolicy: Always
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock
        - mountPath: /var/lib/docker/containers
          name: docker-containers
        - mountPath: /var/log
          name: docker-logs
        - mountPath: /tmp/k8sconfig/
          name: config-volume
        - mountPath: /hostroot
          name: hostroot
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: config-volume
        configMap:
          name: mak8sextn-config
      - name: hostroot
        hostPath:
          path: /
          type: Directory
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: docker-containers
        hostPath:
          path: /var/lib/docker/containers
          type: Directory
      - name: docker-logs
        hostPath:
            path: /var/log
            type: Directory
